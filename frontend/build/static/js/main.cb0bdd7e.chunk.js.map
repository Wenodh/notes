{"version":3,"sources":["components/Footer/Footer.js","constants/userConstants.js","actions/userActions.js","components/Header/Header.js","screens/LandingPage/LandingPage.js","components/MainScreen.js","constants/notesConstants.js","actions/notesActions.js","components/Loading.js","components/ErrorMessage.js","screens/MyNotes/MyNotes.js","screens/LoginScreen/LoginScreen.js","screens/RegisterScreen/RegisterScreen.js","screens/SingleNote/SingleNote.js","screens/SingleNote/CreateNote.js","screens/ProfileScreen/ProfileScreen.js","App.js","reportWebVitals.js","store.js","reducers/notesReducers.js","reducers/userReducers.js","index.js"],"names":["Footer","style","width","position","bottom","display","justifyContent","Container","Row","Col","className","Date","getFullYear","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","login","email","password","dispatch","a","type","config","headers","axios","post","data","payload","localStorage","setItem","JSON","stringify","response","message","register","name","pic","Header","setSearch","useDispatch","userInfo","useSelector","state","userLogin","useEffect","Navbar","collapseOnSelect","expand","bg","variant","Brand","to","Toggle","Collapse","id","Nav","Form","inline","FormControl","placeholder","onChange","e","target","value","Link","NavDropdown","title","Item","Divider","onClick","removeItem","LandingPage","href","Button","size","MainScreen","tittle","children","NOTES_LIST_REQUEST","NOTES_LIST_SUCCESS","NOTES_LIST_FAIL","NOTES_CREATE_REQUEST","NOTES_CREATE_SUCCESS","NOTES_CREATE_FAIL","NOTES_UPDATE_REQUEST","NOTES_UPDATE_SUCCESS","NOTES_UPDATE_FAIL","NOTES_DELETE_REQUEST","NOTES_DELETE_SUCCESS","NOTES_DELETE_FAIL","deleteNoteAction","getState","Authorization","token","delete","Loading","alignItems","height","Spinner","animation","ErrorMessage","Alert","fontSize","MyNotes","history","search","noteList","loading","error","notes","noteDelete","loadingDelete","errorDelete","successDelete","success","successCreate","noteCreate","successUpdate","noteUpdate","get","push","marginLeft","marginBottom","filter","filteredNote","toLowerCase","includes","reverse","map","note","Accordion","Card","margin","color","textDecoration","flex","cursor","alignSelf","as","Text","eventKey","_id","window","confirm","Body","Badge","pill","paddingLeft","paddingRight","backgroundColor","borderRadius","category","content","createdAt","substring","LoginScreen","useState","setEmail","setPassword","submitHandler","preventDefault","onSubmit","Group","controlId","Label","Control","RegisterScreen","setName","setPic","confirmPassword","setConfirmPassword","setMessage","picMessage","setPicMessage","userRegister","File","pics","console","log","process","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","postDetails","files","label","custom","SingleNote","match","setTitle","setContent","setCategory","date","setDate","fetching","params","updatedAt","put","updateNoteAction","rows","CreateNote","resetHandler","createNoteAction","toLocaleDateString","ProfileScreen","location","userUpdate","md","user","src","alt","App","s","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb0bdd7e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer\r\n            style={{\r\n                width: '100%',\r\n                position: 'relative',\r\n                bottom: 0,\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n            }}\r\n        >\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">\r\n                        <p> &copy; 2020 - {new Date().getFullYear()}</p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAILURE';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\n","import {\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n} from '../constants/userConstants';\r\nimport axios from 'axios';\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_LOGIN_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login',\r\n            { email, password },\r\n            config\r\n        );\r\n\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    dispatch({ type: USER_LOGOUT });\r\n};\r\n\r\nexport const register = (name, email, password, pic) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_REGISTER_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users',\r\n            { name, pic, email, password },\r\n            config\r\n        );\r\n\r\n        dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_UPDATE_REQUEST });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post('/api/users/profile', user, config);\r\n\r\n        dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\r\n\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport {\r\n    Navbar,\r\n    Nav,\r\n    NavDropdown,\r\n    Container,\r\n    Form,\r\n    FormControl,\r\n} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { logout } from '../../actions/userActions';\r\n\r\nfunction Header({ setSearch }) {\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n    };\r\n\r\n    useEffect(() => {}, [userInfo]);\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"primary\" variant=\"dark\">\r\n            <Container>\r\n                <Navbar.Brand>\r\n                    {userInfo ? (\r\n                        <Link to=\"/mynotes\">Notes</Link>\r\n                    ) : (\r\n                        <Link to=\"/\">Notes</Link>\r\n                    )}\r\n                </Navbar.Brand>\r\n\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"m-auto\">\r\n                        {userInfo && (\r\n                            <Form inline>\r\n                                <FormControl\r\n                                    type=\"text\"\r\n                                    placeholder=\"Search\"\r\n                                    className=\"mr-sm-2\"\r\n                                    onChange={(e) => setSearch(e.target.value)}\r\n                                />\r\n                            </Form>\r\n                        )}\r\n                    </Nav>\r\n                    <Nav>\r\n                        {userInfo ? (\r\n                            <>\r\n                                <Nav.Link>\r\n                                    <Link to=\"/mynotes\">My Notes</Link>\r\n                                </Nav.Link>\r\n                                <NavDropdown\r\n                                    title={`${userInfo.name}`}\r\n                                    id=\"collapsible-nav-dropdown\"\r\n                                >\r\n                                    <NavDropdown.Item>\r\n                                        <Link to=\"/profile\">My Profile</Link>\r\n                                    </NavDropdown.Item>\r\n\r\n                                    <NavDropdown.Divider />\r\n                                    <NavDropdown.Item onClick={logoutHandler}>\r\n                                        Logout\r\n                                    </NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            </>\r\n                        ) : (\r\n                            <Nav.Link>\r\n                                <Link to=\"/login\">Login</Link>\r\n                            </Nav.Link>\r\n                        )}\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Button, Container, Row } from 'react-bootstrap';\r\nimport './LandingPage.css';\r\nconst LandingPage = () => {\r\n    //  useEffect(() => {\r\n    //      const userInfo = localStorage.getItem('userInfo');\r\n    //      if (userInfo) {\r\n    //          history.push('/mynotes');\r\n    //      }\r\n    //  }, [history]);\r\n    return (\r\n        <div className=\"main\">\r\n            <Container>\r\n                <Row>\r\n                    <div className=\"intro-text\">\r\n                        <h1 className=\"title\">Welcome Login to Create Notes</h1>\r\n                        <p className=\"subtitle\">\r\n                            One Safe place for all yours notes.\r\n                        </p>\r\n                        <div className=\"bottomContainer\">\r\n                            <a href=\"/login\">\r\n                                <Button size=\"lg\" className=\"landingButton\">\r\n                                    Login\r\n                                </Button>\r\n                            </a>\r\n                            <a href=\"/register\">\r\n                                <Button\r\n                                    size=\"lg\"\r\n                                    className=\"landingButton\"\r\n                                    variant=\"outline-primary\"\r\n                                >\r\n                                    SignUp\r\n                                </Button>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LandingPage;\r\n","import React from 'react';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport './MainScreen.css';\r\nconst MainScreen = ({ tittle, children }) => {\r\n    return (\r\n        <div className=\"mainBack\">\r\n            <Container>\r\n                <Row>\r\n                    <div className=\"page\">\r\n                        {tittle && (\r\n                            <>\r\n                                <h1 className=\"heading\">{tittle}</h1>\r\n                                <hr />\r\n                            </>\r\n                        )}\r\n                        {children}\r\n                    </div>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainScreen;\r\n","export const NOTES_LIST_REQUEST = 'NOTES_LIST_REQUEST';\r\nexport const NOTES_LIST_SUCCESS = 'NOTES_LIST_SUCCESS';\r\nexport const NOTES_LIST_FAIL = 'NOTES_LIST_FAIL';\r\n\r\nexport const NOTES_CREATE_REQUEST = 'NOTES_CREATE_REQUEST';\r\nexport const NOTES_CREATE_SUCCESS = 'NOTES_CREATE_SUCCESS';\r\nexport const NOTES_CREATE_FAIL = 'NOTES_CREATE_FAIL';\r\n\r\nexport const NOTES_UPDATE_REQUEST = 'NOTES_UPDATE_REQUEST';\r\nexport const NOTES_UPDATE_SUCCESS = 'NOTES_UPDATE_SUCCESS';\r\nexport const NOTES_UPDATE_FAIL = 'NOTES_UPDATE_FAIL';\r\n\r\nexport const NOTES_DELETE_REQUEST = 'NOTES_DELETE_REQUEST';\r\nexport const NOTES_DELETE_SUCCESS = 'NOTES_DELETE_SUCCESS';\r\nexport const NOTES_DELETE_FAIL = 'NOTES_DELETE_FAIL';\r\n","import {\r\n    NOTES_CREATE_FAIL,\r\n    NOTES_CREATE_REQUEST,\r\n    NOTES_CREATE_SUCCESS,\r\n    NOTES_DELETE_FAIL,\r\n    NOTES_DELETE_REQUEST,\r\n    NOTES_DELETE_SUCCESS,\r\n    NOTES_LIST_FAIL,\r\n    NOTES_LIST_REQUEST,\r\n    NOTES_LIST_SUCCESS,\r\n    NOTES_UPDATE_FAIL,\r\n    NOTES_UPDATE_REQUEST,\r\n    NOTES_UPDATE_SUCCESS,\r\n} from '../constants/notesConstants';\r\nimport axios from 'axios';\r\n\r\nexport const listNotes = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: NOTES_LIST_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/notes`, config);\r\n\r\n        dispatch({\r\n            type: NOTES_LIST_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        dispatch({\r\n            type: NOTES_LIST_FAIL,\r\n            payload: message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const createNoteAction =\r\n    (title, content, category) => async (dispatch, getState) => {\r\n        try {\r\n            dispatch({\r\n                type: NOTES_CREATE_REQUEST,\r\n            });\r\n\r\n            const {\r\n                userLogin: { userInfo },\r\n            } = getState();\r\n\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`,\r\n                },\r\n            };\r\n\r\n            const { data } = await axios.post(\r\n                `/api/notes/create`,\r\n                { title, content, category },\r\n                config\r\n            );\r\n\r\n            dispatch({\r\n                type: NOTES_CREATE_SUCCESS,\r\n                payload: data,\r\n            });\r\n        } catch (error) {\r\n            const message =\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message;\r\n            dispatch({\r\n                type: NOTES_CREATE_FAIL,\r\n                payload: message,\r\n            });\r\n        }\r\n    };\r\n\r\nexport const deleteNoteAction = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: NOTES_DELETE_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.delete(`/api/notes/${id}`, config);\r\n\r\n        dispatch({\r\n            type: NOTES_DELETE_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        dispatch({\r\n            type: NOTES_DELETE_FAIL,\r\n            payload: message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateNoteAction =\r\n    (id, title, content, category) => async (dispatch, getState) => {\r\n        try {\r\n            dispatch({\r\n                type: NOTES_UPDATE_REQUEST,\r\n            });\r\n\r\n            const {\r\n                userLogin: { userInfo },\r\n            } = getState();\r\n\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`,\r\n                },\r\n            };\r\n\r\n            const { data } = await axios.put(\r\n                `/api/notes/${id}`,\r\n                { title, content, category },\r\n                config\r\n            );\r\n\r\n            dispatch({\r\n                type: NOTES_UPDATE_SUCCESS,\r\n                payload: data,\r\n            });\r\n        } catch (error) {\r\n            const message =\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message;\r\n            dispatch({\r\n                type: NOTES_UPDATE_FAIL,\r\n                payload: message,\r\n            });\r\n        }\r\n    };\r\n","import { Spinner } from 'react-bootstrap';\r\n\r\nconst Loading = ({ size = 100 }) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                width: '100%',\r\n                height: '100%',\r\n            }}\r\n        >\r\n            <Spinner\r\n                style={{\r\n                    width: size,\r\n                    height: size,\r\n                }}\r\n                animation=\"border\"\r\n                variant=\"info\"\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;\r\n","import { Alert } from 'react-bootstrap';\r\n\r\nconst ErrorMessage = ({ variant = 'info', children }) => {\r\n    return (\r\n        <Alert variant={variant} style={{ fontSize: 20 }}>\r\n            <strong>{children}</strong>\r\n        </Alert>\r\n    );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React, { useEffect } from 'react';\r\nimport { Accordion, Badge, Button, Card } from 'react-bootstrap';\r\nimport MainScreen from '../../components/MainScreen';\r\nimport { Link } from 'react-router-dom';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteNoteAction, listNotes } from '../../actions/notesActions';\r\nimport Loading from '../../components/Loading';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\n\r\nfunction MyNotes({ history, search }) {\r\n    const dispatch = useDispatch();\r\n\r\n    const noteList = useSelector((state) => state.noteList);\r\n    const { loading, error, notes } = noteList;\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const noteDelete = useSelector((state) => state.noteDelete);\r\n    const {\r\n        loading: loadingDelete,\r\n        error: errorDelete,\r\n        success: successDelete,\r\n    } = noteDelete;\r\n\r\n    const noteCreate = useSelector((state) => state.noteCreate);\r\n    const { success: successCreate } = noteCreate;\r\n\r\n    const noteUpdate = useSelector((state) => state.noteUpdate);\r\n    const { success: successUpdate } = noteUpdate;\r\n\r\n    useEffect(() => {\r\n        dispatch(listNotes());\r\n        if (!userInfo) {\r\n            history.push('/');\r\n        }\r\n    }, [\r\n        dispatch,\r\n        history,\r\n        userInfo,\r\n        successDelete,\r\n        successCreate,\r\n        successUpdate,\r\n    ]);\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure?')) {\r\n            dispatch(deleteNoteAction(id));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <MainScreen title={`Welcome Back ${userInfo && userInfo.name}..`}>\r\n            {/* {console.log(notes)} */}\r\n            <Link to=\"/createnote\">\r\n                <Button style={{ marginLeft: 10, marginBottom: 6 }} size=\"lg\">\r\n                    Create new Note\r\n                </Button>\r\n            </Link>\r\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n            {errorDelete && (\r\n                <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\r\n            )}\r\n            {loading && <Loading />}\r\n            {loadingDelete && <Loading />}\r\n            {notes &&\r\n                notes\r\n                    .filter((filteredNote) =>\r\n                        filteredNote.title\r\n                            .toLowerCase()\r\n                            .includes(search.toLowerCase())\r\n                    )\r\n                    .reverse()\r\n                    .map((note) => (\r\n                        <Accordion key={note._id}>\r\n                            <Card style={{ margin: 10 }}>\r\n                                <Card.Header style={{ display: 'flex' }}>\r\n                                    <span\r\n                                        style={{\r\n                                            color: 'white',\r\n                                            textDecoration: 'none',\r\n                                            flex: 1,\r\n                                            cursor: 'pointer',\r\n                                            alignSelf: 'center',\r\n                                            fontSize: 18,\r\n                                        }}\r\n                                    >\r\n                                        <Accordion.Toggle\r\n                                            as={Card.Text}\r\n                                            variant=\"link\"\r\n                                            eventKey=\"0\"\r\n                                        >\r\n                                            {note.title}\r\n                                        </Accordion.Toggle>\r\n                                    </span>\r\n\r\n                                    <div>\r\n                                        <Button>\r\n                                            <Link to={`/note/${note._id}`}>\r\n                                                Edit\r\n                                            </Link>\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant=\"danger\"\r\n                                            className=\"mx-2\"\r\n                                            onClick={() =>\r\n                                                deleteHandler(note._id)\r\n                                            }\r\n                                        >\r\n                                            Delete\r\n                                        </Button>\r\n                                    </div>\r\n                                </Card.Header>\r\n                                <Accordion.Collapse eventKey=\"0\">\r\n                                    <Card.Body>\r\n                                        <h4>\r\n                                            <Badge\r\n                                                pill\r\n                                                bg=\"success\"\r\n                                                style={{\r\n                                                    paddingLeft: '10px',\r\n                                                    paddingRight: '10px',\r\n                                                    backgroundColor: '#2ecc71',\r\n                                                    borderRadius: '50px',\r\n                                                }}\r\n                                            >\r\n                                                Category - {note.category}\r\n                                            </Badge>\r\n                                        </h4>\r\n                                        <blockquote className=\"blockquote mb-0\">\r\n                                            <ReactMarkdown>\r\n                                                {note.content}\r\n                                            </ReactMarkdown>\r\n                                            <footer className=\"blockquote-footer\">\r\n                                                Created on{' '}\r\n                                                <cite title=\"Source Title\">\r\n                                                    {note.createdAt.substring(\r\n                                                        0,\r\n                                                        10\r\n                                                    )}\r\n                                                </cite>\r\n                                            </footer>\r\n                                        </blockquote>\r\n                                    </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                        </Accordion>\r\n                    ))}\r\n        </MainScreen>\r\n    );\r\n}\r\n\r\nexport default MyNotes;\r\n","import { useEffect, useState } from 'react';\r\nimport { Button, Col, Form, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\nimport Loading from '../../components/Loading';\r\nimport MainScreen from '../../components/MainScreen';\r\nimport './LoginScreen.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login } from '../../actions/userActions';\r\n\r\nconst LoginScreen = ({ history }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const dispatch = useDispatch();\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { loading, error, userInfo } = userLogin;\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password));\r\n    };\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push('/mynotes');\r\n        }\r\n    }, [history, userInfo]);\r\n    return (\r\n        <MainScreen tittle=\"LOGIN\">\r\n            <div className=\"loginContainer\">\r\n                {error && (\r\n                    <ErrorMessage variant={'danger'}>{error}</ErrorMessage>\r\n                )}\r\n                {loading && <Loading />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control\r\n                            type=\"email\"\r\n                            value={email}\r\n                            placeholder=\"Enter email\"\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            value={password}\r\n                            placeholder=\"Password\"\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Login\r\n                    </Button>\r\n                </Form>\r\n                <Row className=\"py-3\">\r\n                    <Col>\r\n                        New Customer? <Link to=\"./register\">Register Here</Link>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </MainScreen>\r\n    );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import { useEffect, useState } from 'react';\r\nimport { Button, Col, Form, Row } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\nimport Loading from '../../components/Loading';\r\nimport MainScreen from '../../components/MainScreen';\r\nimport './RegisterScreen.css';\r\nimport { register } from '../../actions/userActions';\r\n\r\nconst RegisterScreen = ({ history }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [pic, setPic] = useState(\r\n        'https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg'\r\n    );\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n    const [picMessage, setPicMessage] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userRegister = useSelector((state) => state.userRegister);\r\n    const { loading, error, userInfo } = userRegister;\r\n\r\n    const postDetails = (pics) => {\r\n        console.log(process.env.REACT_APP_UPLOAD_URL);\r\n        if (\r\n            pics ===\r\n            'https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg'\r\n        ) {\r\n            return setPicMessage('Please Select an Image');\r\n        }\r\n        setPicMessage(null);\r\n        if (pics.type === 'image/jpeg' || pics.type === 'image/png') {\r\n            const data = new FormData();\r\n            data.append('file', pics);\r\n            data.append('upload_preset', process.env.REACT_APP_UPLOAD_PRESET);\r\n            data.append('cloud_name', process.env.REACT_APP_CLOUD_NAME);\r\n            fetch(process.env.REACT_APP_UPLOAD_URL, {\r\n                method: 'post',\r\n                body: data,\r\n            })\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    setPic(data.url.toString());\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        } else {\r\n            return setPicMessage('Please Select an Image');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push('/');\r\n        }\r\n    }, [history, userInfo]);\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match');\r\n        } else {\r\n            dispatch(\r\n                register({\r\n                    email,\r\n                    name,\r\n                    password,\r\n                    pic,\r\n                })\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <MainScreen tittle=\"REGISTER\">\r\n                {' '}\r\n                <div className=\"loginContainer\">\r\n                    {error && (\r\n                        <ErrorMessage variant=\"danger\">{error}</ErrorMessage>\r\n                    )}\r\n                    {message && (\r\n                        <ErrorMessage variant=\"danger\">{message}</ErrorMessage>\r\n                    )}\r\n                    {loading && <Loading />}\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId=\"name\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type=\"name\"\r\n                                value={name}\r\n                                placeholder=\"Enter name\"\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email address</Form.Label>\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                value={email}\r\n                                placeholder=\"Enter email\"\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                value={password}\r\n                                placeholder=\"Password\"\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"confirmPassword\">\r\n                            <Form.Label>Confirm Password</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                value={confirmPassword}\r\n                                placeholder=\"Confirm Password\"\r\n                                onChange={(e) =>\r\n                                    setConfirmPassword(e.target.value)\r\n                                }\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        {picMessage && (\r\n                            <ErrorMessage variant=\"danger\">\r\n                                {picMessage}\r\n                            </ErrorMessage>\r\n                        )}\r\n                        <Form.Group controlId=\"pic\">\r\n                            <Form.Label>Profile Picture</Form.Label>\r\n                            <Form.File\r\n                                onChange={(e) => postDetails(e.target.files[0])}\r\n                                id=\"custom-file\"\r\n                                type=\"image/png\"\r\n                                label=\"Upload Profile Picture\"\r\n                                custom\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Register\r\n                        </Button>\r\n                    </Form>\r\n                    <Row className=\"py-3\">\r\n                        <Col>\r\n                            Have an Account ? <Link to=\"/login\">Login</Link>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </MainScreen>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React, { useEffect, useState } from 'react';\r\nimport MainScreen from '../../components/MainScreen';\r\nimport axios from 'axios';\r\nimport { Button, Card, Form } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteNoteAction, updateNoteAction } from '../../actions/notesActions';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\nimport Loading from '../../components/Loading';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nfunction SingleNote({ match, history }) {\r\n    const [title, setTitle] = useState();\r\n    const [content, setContent] = useState();\r\n    const [category, setCategory] = useState();\r\n    const [date, setDate] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const noteUpdate = useSelector((state) => state.noteUpdate);\r\n    const { loading, error } = noteUpdate;\r\n\r\n    const noteDelete = useSelector((state) => state.noteDelete);\r\n    const { loading: loadingDelete, error: errorDelete } = noteDelete;\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure?')) {\r\n            dispatch(deleteNoteAction(id));\r\n        }\r\n        history.push('/mynotes');\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetching = async () => {\r\n            const { data } = await axios.get(`/api/notes/${match.params.id}`);\r\n\r\n            setTitle(data.title);\r\n            setContent(data.content);\r\n            setCategory(data.category);\r\n            setDate(data.updatedAt);\r\n        };\r\n\r\n        fetching();\r\n    }, [match.params.id, date]);\r\n\r\n    const resetHandler = () => {\r\n        setTitle('');\r\n        setCategory('');\r\n        setContent('');\r\n    };\r\n\r\n    const updateHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateNoteAction(match.params.id, title, content, category));\r\n        if (!title || !content || !category) return;\r\n\r\n        resetHandler();\r\n        history.push('/mynotes');\r\n    };\r\n\r\n    return (\r\n        <MainScreen title=\"Edit Note\">\r\n            <Card>\r\n                <Card.Header>Edit your Note</Card.Header>\r\n                <Card.Body>\r\n                    <Form onSubmit={updateHandler}>\r\n                        {loadingDelete && <Loading />}\r\n                        {error && (\r\n                            <ErrorMessage variant=\"danger\">\r\n                                {error}\r\n                            </ErrorMessage>\r\n                        )}\r\n                        {errorDelete && (\r\n                            <ErrorMessage variant=\"danger\">\r\n                                {errorDelete}\r\n                            </ErrorMessage>\r\n                        )}\r\n                        <Form.Group controlId=\"title\">\r\n                            <Form.Label>Title</Form.Label>\r\n                            <Form.Control\r\n                                type=\"title\"\r\n                                placeholder=\"Enter the title\"\r\n                                value={title}\r\n                                onChange={(e) => setTitle(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"content\">\r\n                            <Form.Label>Content</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                placeholder=\"Enter the content\"\r\n                                rows={4}\r\n                                value={content}\r\n                                onChange={(e) => setContent(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        {content && (\r\n                            <Card>\r\n                                <Card.Header>Note Preview</Card.Header>\r\n                                <Card.Body>\r\n                                    <ReactMarkdown>{content}</ReactMarkdown>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        )}\r\n\r\n                        <Form.Group controlId=\"content\">\r\n                            <Form.Label>Category</Form.Label>\r\n                            <Form.Control\r\n                                type=\"content\"\r\n                                placeholder=\"Enter the Category\"\r\n                                value={category}\r\n                                onChange={(e) => setCategory(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        {loading && <Loading size={50} />}\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Update Note\r\n                        </Button>\r\n                        <Button\r\n                            className=\"mx-2\"\r\n                            variant=\"danger\"\r\n                            onClick={() => deleteHandler(match.params.id)}\r\n                        >\r\n                            Delete Note\r\n                        </Button>\r\n                    </Form>\r\n                </Card.Body>\r\n\r\n                <Card.Footer className=\"text-muted\">\r\n                    Updated on - {date.substring(0, 10)}\r\n                </Card.Footer>\r\n            </Card>\r\n        </MainScreen>\r\n    );\r\n}\r\n\r\nexport default SingleNote;\r\n","import React, { useEffect, useState } from 'react';\r\nimport MainScreen from '../../components/MainScreen';\r\nimport { Button, Card, Form } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createNoteAction } from '../../actions/notesActions';\r\nimport Loading from '../../components/Loading';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nfunction CreateNote({ history }) {\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [category, setCategory] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const noteCreate = useSelector((state) => state.noteCreate);\r\n    const { loading, error, note } = noteCreate;\r\n\r\n    console.log(note);\r\n\r\n    const resetHandler = () => {\r\n        setTitle('');\r\n        setCategory('');\r\n        setContent('');\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(createNoteAction(title, content, category));\r\n        if (!title || !content || !category) return;\r\n\r\n        resetHandler();\r\n        history.push('/mynotes');\r\n    };\r\n\r\n    useEffect(() => {}, []);\r\n\r\n    return (\r\n        <MainScreen title=\"Create a Note\">\r\n            <Card>\r\n                <Card.Header>Create a new Note</Card.Header>\r\n                <Card.Body>\r\n                    <Form onSubmit={submitHandler}>\r\n                        {error && (\r\n                            <ErrorMessage variant=\"danger\">\r\n                                {error}\r\n                            </ErrorMessage>\r\n                        )}\r\n                        <Form.Group controlId=\"title\">\r\n                            <Form.Label>Title</Form.Label>\r\n                            <Form.Control\r\n                                type=\"title\"\r\n                                value={title}\r\n                                placeholder=\"Enter the title\"\r\n                                onChange={(e) => setTitle(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"content\">\r\n                            <Form.Label>Content</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                value={content}\r\n                                placeholder=\"Enter the content\"\r\n                                rows={4}\r\n                                onChange={(e) => setContent(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        {content && (\r\n                            <Card>\r\n                                <Card.Header>Note Preview</Card.Header>\r\n                                <Card.Body>\r\n                                    <ReactMarkdown>{content}</ReactMarkdown>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        )}\r\n\r\n                        <Form.Group controlId=\"content\">\r\n                            <Form.Label>Category</Form.Label>\r\n                            <Form.Control\r\n                                type=\"content\"\r\n                                value={category}\r\n                                placeholder=\"Enter the Category\"\r\n                                onChange={(e) => setCategory(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        {loading && <Loading size={50} />}\r\n                        <Button type=\"submit\" variant=\"primary\">\r\n                            Create Note\r\n                        </Button>\r\n                        <Button\r\n                            className=\"mx-2\"\r\n                            onClick={resetHandler}\r\n                            variant=\"danger\"\r\n                        >\r\n                            Reset Fields\r\n                        </Button>\r\n                    </Form>\r\n                </Card.Body>\r\n\r\n                <Card.Footer className=\"text-muted\">\r\n                    Creating on - {new Date().toLocaleDateString()}\r\n                </Card.Footer>\r\n            </Card>\r\n        </MainScreen>\r\n    );\r\n}\r\n\r\nexport default CreateNote;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport MainScreen from '../../components/MainScreen';\r\nimport './ProfileScreen.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateProfile } from '../../actions/userActions';\r\nimport Loading from '../../components/Loading';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [pic, setPic] = useState();\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [picMessage, setPicMessage] = useState();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const userUpdate = useSelector((state) => state.userUpdate);\r\n    const { loading, error, success } = userUpdate;\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/');\r\n        } else {\r\n            setName(userInfo.name);\r\n            setEmail(userInfo.email);\r\n            setPic(userInfo.pic);\r\n        }\r\n    }, [history, userInfo]);\r\n\r\n    const postDetails = (pics) => {\r\n        setPicMessage(null);\r\n        if (pics.type === 'image/jpeg' || pics.type === 'image/png') {\r\n            const data = new FormData();\r\n            data.append('file', pics);\r\n            data.append('upload_preset', process.env.REACT_APP_UPLOAD_PRESET);\r\n            data.append('cloud_name', process.env.REACT_APP_CLOUD_NAME);\r\n            fetch(process.env.REACT_APP_UPLOAD_URL, {\r\n                method: 'post',\r\n                body: data,\r\n            })\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    setPic(data.url.toString());\r\n                    console.log(pic);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        } else {\r\n            return setPicMessage('Please Select an Image');\r\n        }\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(updateProfile({ name, email, password, pic }));\r\n    };\r\n\r\n    return (\r\n        <MainScreen title=\"EDIT PROFILE\">\r\n            <div>\r\n                <Row className=\"profileContainer\">\r\n                    <Col md={6}>\r\n                        <Form onSubmit={submitHandler}>\r\n                            {loading && <Loading />}\r\n                            {success && (\r\n                                <ErrorMessage variant=\"success\">\r\n                                    Updated Successfully\r\n                                </ErrorMessage>\r\n                            )}\r\n                            {error && (\r\n                                <ErrorMessage variant=\"danger\">\r\n                                    {error}\r\n                                </ErrorMessage>\r\n                            )}\r\n                            <Form.Group controlId=\"name\">\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter Name\"\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"email\">\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"email\"\r\n                                    placeholder=\"Enter Email\"\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"password\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"password\"\r\n                                    placeholder=\"Enter Password\"\r\n                                    value={password}\r\n                                    onChange={(e) =>\r\n                                        setPassword(e.target.value)\r\n                                    }\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"confirmPassword\">\r\n                                <Form.Label>Confirm Password</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"password\"\r\n                                    placeholder=\"Confirm Password\"\r\n                                    value={confirmPassword}\r\n                                    onChange={(e) =>\r\n                                        setConfirmPassword(e.target.value)\r\n                                    }\r\n                                ></Form.Control>\r\n                            </Form.Group>{' '}\r\n                            {picMessage && (\r\n                                <ErrorMessage variant=\"danger\">\r\n                                    {picMessage}\r\n                                </ErrorMessage>\r\n                            )}\r\n                            <Form.Group controlId=\"pic\">\r\n                                <Form.Label>Change Profile Picture</Form.Label>\r\n                                <Form.File\r\n                                    onChange={(e) =>\r\n                                        postDetails(e.target.files[0])\r\n                                    }\r\n                                    id=\"custom-file\"\r\n                                    type=\"image/png\"\r\n                                    label=\"Upload Profile Picture\"\r\n                                    custom\r\n                                />\r\n                            </Form.Group>\r\n                            <Button type=\"submit\" variant=\"primary\">\r\n                                Update\r\n                            </Button>\r\n                        </Form>\r\n                    </Col>\r\n                    <Col\r\n                        style={{\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                        }}\r\n                    >\r\n                        <img src={pic} alt={name} className=\"profilePic\" />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </MainScreen>\r\n    );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import './App.css';\nimport Footer from './components/Footer/Footer';\nimport Header from './components/Header/Header';\nimport LandingPage from './screens/LandingPage/LandingPage';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport MyNotes from './screens/MyNotes/MyNotes';\nimport LoginScreen from './screens/LoginScreen/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen/RegisterScreen';\nimport SingleNote from './screens/SingleNote/SingleNote';\nimport CreateNote from './screens/SingleNote/CreateNote';\nimport ProfileScreen from './screens/ProfileScreen/ProfileScreen';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nfunction App() {\n    const [search, setSearch] = useState('');\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    return (\n        <BrowserRouter>\n            <Header setSearch={(s) => setSearch(s)} />\n            <main>\n                <Route\n                    path=\"/\"\n                    component={\n                        userInfo\n                            ? ({ history }) => (\n                                  <MyNotes search={search} history={history} />\n                              )\n                            : LandingPage\n                    }\n                    exact\n                />\n                <Route path=\"/login\" component={LoginScreen} />\n                <Route path=\"/register\" component={RegisterScreen} />\n                <Route\n                    path=\"/mynotes\"\n                    component={({ history }) => (\n                        <MyNotes search={search} history={history} />\n                    )}\n                />\n                <Route path=\"/note/:id\" component={SingleNote} />\n                <Route path=\"/createnote\" component={CreateNote} />;\n                <Route path=\"/profile\" component={ProfileScreen} />\n            </main>\n            <Footer />\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userUpdateReducer,\r\n} from './reducers/userReducers';\r\nimport {\r\n    noteCreateReducer,\r\n    noteDeleteReducer,\r\n    noteListReducer,\r\n    noteUpdateReducer,\r\n} from './reducers/notesReducers';\r\nconst reducer = combineReducers({\r\n    // reducers\r\n    noteList: noteListReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    noteCreate: noteCreateReducer,\r\n    noteDelete: noteDeleteReducer,\r\n    noteUpdate: noteUpdateReducer,\r\n    userUpdate: userUpdateReducer,\r\n});\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n    ? JSON.parse(localStorage.getItem('userInfo'))\r\n    : null;\r\nconst initialState = { userLogin: { userInfo: userInfoFromStorage } };\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n    NOTES_UPDATE_REQUEST,\r\n    NOTES_UPDATE_SUCCESS,\r\n    NOTES_UPDATE_FAIL,\r\n    NOTES_CREATE_FAIL,\r\n    NOTES_CREATE_REQUEST,\r\n    NOTES_CREATE_SUCCESS,\r\n    NOTES_DELETE_FAIL,\r\n    NOTES_DELETE_REQUEST,\r\n    NOTES_DELETE_SUCCESS,\r\n    NOTES_LIST_FAIL,\r\n    NOTES_LIST_REQUEST,\r\n    NOTES_LIST_SUCCESS,\r\n} from '../constants/notesConstants';\r\n\r\nexport const noteListReducer = (state = { notes: [] }, action) => {\r\n    switch (action.type) {\r\n        case NOTES_LIST_REQUEST:\r\n            return { loading: true };\r\n        case NOTES_LIST_SUCCESS:\r\n            return { loading: false, notes: action.payload };\r\n        case NOTES_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const noteCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case NOTES_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case NOTES_CREATE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case NOTES_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const noteDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case NOTES_DELETE_REQUEST:\r\n            return { loading: true };\r\n        case NOTES_DELETE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case NOTES_DELETE_FAIL:\r\n            return { loading: false, error: action.payload, success: false };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const noteUpdateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case NOTES_UPDATE_REQUEST:\r\n            return { loading: true };\r\n        case NOTES_UPDATE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case NOTES_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload, success: false };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n} from '../constants/userConstants';\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true };\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_LOGOUT:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true };\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_LOGOUT:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const userUpdateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true };\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, userInfo: action.payload, success: true };\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload, success: false };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}